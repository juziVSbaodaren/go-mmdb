name: Release

on:
  push:
    tags:
      - 'v*'  # 仅当推送以 v 开头的 tag（如 v1.0.0）时触发

permissions:
  contents: write  # 关键：允许创建发布版本

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'  # 请根据你的 Go 版本修改

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and Package Binaries
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          echo "Building version: $VERSION"

          # 清理构建目录
          rm -rf dist pkg
          mkdir -p dist

          ####################
          # Linux (amd64)
          ####################
          mkdir -p pkg/linux/etc
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o pkg/linux/parseIP ./main.go
          cp -r etc/* pkg/linux/etc/
          tar -czf dist/parseIP-linux-${VERSION}.tar.gz -C pkg/linux .

          ####################
          # macOS (amd64)
          ####################
          mkdir -p pkg/macos/etc
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o pkg/macos/parseIP ./main.go
          cp -r etc/* pkg/macos/etc/
          tar -czf dist/parseIP-macos-${VERSION}.tar.gz -C pkg/macos .

          ####################
          # Windows (amd64)
          ####################
          mkdir -p pkg/windows/etc
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o pkg/windows/parseIP.exe ./main.go
          cp -r etc/* pkg/windows/etc/
          cd pkg/windows
          zip -r ../../dist/parseIP-windows-${VERSION}.zip *
          cd -

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
